{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/travellers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddTravellerComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTravellerComponent_div_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.travellerResponse.id = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.travellerResponse.id);\n  }\n}\nexport class AddTravellerComponent {\n  constructor(travellerService, router, route) {\n    this.travellerService = travellerService;\n    this.router = router;\n    this.route = route;\n    this.isEditMode = false;\n    this.addDestinationRequest = {\n      id: 0,\n      name: ''\n    };\n    this.addTravellerRequest = {\n      name: '',\n      email: '',\n      phone: 0,\n      destinations: []\n    };\n    this.travellerResponse = {\n      id: '',\n      name: '',\n      email: '',\n      phone: 0,\n      destinations: []\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          this.isEditMode = true;\n          this.travellerService.getTraveller(id).subscribe({\n            next: traveller => {\n              this.travellerResponse = traveller;\n            },\n            error: response => {\n              console.log(response);\n            }\n          });\n        }\n      }\n    });\n  }\n  /**\r\n   * Create a Traveller\r\n   */\n  addTraveller() {\n    this.addTravellerRequest.destinations.push(this.addDestinationRequest);\n    this.travellerService.createTraveller(this.addTravellerRequest).subscribe({\n      next: traveller => {\n        this.router.navigate(['travellers']);\n      },\n      error: response => {\n        console.log(response);\n      }\n    });\n  }\n  updateTraveller() {\n    console.log(this.travellerResponse);\n    this.travellerService.updateTraveller(this.travellerResponse.id, this.travellerResponse).subscribe({\n      next: traveller => {\n        console.log(traveller);\n        //this.router.navigate(['travellers']);\n      },\n\n      error: response => {\n        console.log(response);\n      }\n    });\n  }\n  /**\r\n   * Cancel operation, empty fields, and go back to home\r\n   */\n  cancelTraveller() {\n    this.router.navigate([\"travellers\"]);\n  }\n}\nAddTravellerComponent.ɵfac = function AddTravellerComponent_Factory(t) {\n  return new (t || AddTravellerComponent)(i0.ɵɵdirectiveInject(i1.TravellersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nAddTravellerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTravellerComponent,\n  selectors: [[\"app-add-traveller\"]],\n  decls: 40,\n  vars: 5,\n  consts: [[1, \"container\", \"my-5\"], [1, \"row\"], [1, \"mb-3\", \"pb-3\", \"border-bottom\"], [1, \"btn\", \"btn-danger\", \"py-2\", 3, \"click\"], [1, \"bi\", \"bi-x-circle-fill\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"InputName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"InputName\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"InputEmail\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputPhone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"InputPhone\", \"name\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"InputDestinations\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"InputDestinations\", \"name\", \"destinations\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"checkbox\", 1, \"form-check-input\"], [\"for\", \"checkbox\", 1, \"form-check-label\"], [\"href\", \"https://venanciogomani.net\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"bi\", \"bi-check-circle-fill\"], [\"type\", \"hidden\", \"name\", \"id\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function AddTravellerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \" Add Traveller \");\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AddTravellerComponent_Template_button_click_4_listener() {\n        return ctx.cancelTraveller();\n      });\n      i0.ɵɵtext(5, \" Cancel \");\n      i0.ɵɵelement(6, \"i\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 5)(9, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AddTravellerComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.isEditMode ? ctx.updateTraveller() : ctx.addTraveller();\n      });\n      i0.ɵɵtemplate(11, AddTravellerComponent_div_11_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTravellerComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.isEditMode ? ctx.travellerResponse.name : ctx.addTravellerRequest.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 12);\n      i0.ɵɵtext(18, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTravellerComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.isEditMode ? ctx.travellerResponse.email : ctx.addTravellerRequest.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 9)(21, \"label\", 14);\n      i0.ɵɵtext(22, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTravellerComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.isEditMode ? ctx.travellerResponse.phone : ctx.addTravellerRequest.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 9)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Destinations\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTravellerComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.isEditMode ? ctx.travellerResponse.destinations : ctx.addDestinationRequest.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 18);\n      i0.ɵɵelement(29, \"input\", 19);\n      i0.ɵɵelementStart(30, \"label\", 20);\n      i0.ɵɵtext(31, \"I agree to always be awesome for \");\n      i0.ɵɵelementStart(32, \"a\", 21);\n      i0.ɵɵtext(33, \"lord Venancio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \".\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"button\", 22);\n      i0.ɵɵtext(36, \" Save \");\n      i0.ɵɵelement(37, \"i\", 23);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 5);\n      i0.ɵɵtext(39, \" Picture Of Something Cool Here \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditMode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.isEditMode ? ctx.travellerResponse.name : ctx.addTravellerRequest.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.isEditMode ? ctx.travellerResponse.email : ctx.addTravellerRequest.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.isEditMode ? ctx.travellerResponse.phone : ctx.addTravellerRequest.phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.isEditMode ? ctx.travellerResponse.destinations : ctx.addDestinationRequest.name);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAagBA,2BAAwB;IACWA;MAAAA;MAAA;MAAA,OAAaA,oDAC3D;IAAA,EADgF;IAAjEA,iBAAkE;;;;IAAnCA,eAAkC;IAAlCA,qDAAkC;;;ACFrF,OAAM,MAAOC,qBAAqB;EAyBhCC,YACUC,gBAAmC,EACnCC,MAAc,EACdC,KAAqB;IAFrB,qBAAgB,GAAhBF,gBAAgB;IAChB,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IA1Bf,eAAU,GAAY,KAAK;IAE3B,0BAAqB,GAAgB;MACnCC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP;IAED,wBAAmB,GAAiB;MAClCA,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,YAAY,EAAE;KACf;IAED,sBAAiB,GAAc;MAC7BJ,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,YAAY,EAAE;KACf;EAOE;EAEHC,QAAQ;IACN,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAGC,MAAM,IAAI;QACf,MAAMT,EAAE,GAAGS,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE3B,IAAIV,EAAE,EAAE;UACN,IAAI,CAACW,UAAU,GAAG,IAAI;UAEtB,IAAI,CAACd,gBAAgB,CAACe,YAAY,CAACZ,EAAE,CAAC,CACrCO,SAAS,CAAC;YACTC,IAAI,EAAGK,SAAS,IAAI;cAClB,IAAI,CAACC,iBAAiB,GAAGD,SAAS;YACpC,CAAC;YACDE,KAAK,EAAGC,QAAQ,IAAI;cAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;YACvB;WACD,CAAC;;MAEN;KACD,CAAC;EACJ;EAEA;;;EAGAG,YAAY;IACV,IAAI,CAACC,mBAAmB,CAAChB,YAAY,CAACiB,IAAI,CAAC,IAAI,CAACC,qBAAqB,CAAC;IACtE,IAAI,CAACzB,gBAAgB,CAAC0B,eAAe,CAAC,IAAI,CAACH,mBAAmB,CAAC,CAC9Db,SAAS,CAAC;MACTC,IAAI,EAAGK,SAAS,IAAI;QAClB,IAAI,CAACf,MAAM,CAAC0B,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC;MACDT,KAAK,EAAGC,QAAQ,IAAI;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB;KACD,CAAC;EACJ;EAEAS,eAAe;IACbR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,iBAAiB,CAAC;IACnC,IAAI,CAACjB,gBAAgB,CAAC4B,eAAe,CAAC,IAAI,CAACX,iBAAiB,CAACd,EAAE,EAAE,IAAI,CAACc,iBAAiB,CAAC,CACvFP,SAAS,CAAC;MACTC,IAAI,EAAGK,SAAS,IAAI;QAClBI,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;QACtB;MACF,CAAC;;MACDE,KAAK,EAAGC,QAAQ,IAAI;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB;KACD,CAAC;EACJ;EAEA;;;EAGAU,eAAe;IACb,IAAI,CAAC5B,MAAM,CAAC0B,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;;AAxFW7B,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAgC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZlCrC,8BAA4B;MAGhBA,+BACA;MAAAA,iCAAgE;MAAxDA;QAAA,OAASsC,qBAAiB;MAAA,EAAC;MAC/BtC,wBACA;MAAAA,uBAAmC;MACvCA,iBAAS;MAGjBA,8BAAiB;MAEYA;QAAA,wBAAyBsC,qBAAiB,GAAGA,kBAAc;MAAA,EAAC;MAC7EtC,wEAEM;MACNA,+BAAkB;MAC4BA,qBAAI;MAAAA,iBAAQ;MACtDA,kCAAgJ;MAA7EA;QAAA;MAAA,EAA4E;MAA/IA,iBAAgJ;MAEpJA,+BAAkB;MAC2BA,8BAAa;MAAAA,iBAAQ;MAChEA,kCAAqJ;MAA/EA;QAAA;MAAA,EAA8E;MAApJA,iBAAqJ;MAEvJA,+BAAkB;MAC6BA,sBAAK;MAAAA,iBAAQ;MACxDA,kCAAoJ;MAA/EA;QAAA;MAAA,EAA8E;MAAnJA,iBAAoJ;MAExJA,+BAAkB;MACkCA,6BAAY;MAAAA,iBAAQ;MACtEA,kCAA0K;MAAvFA;QAAA;MAAA,EAAsF;MAAzKA,iBAA0K;MAE5KA,gCAA6B;MAC3BA,6BAA8D;MAC9DA,kCAA+C;MAAAA,kDAAiC;MAAAA,8BAAqC;MAAAA,8BAAa;MAAAA,iBAAI;MAAAA,kBAAC;MAAAA,iBAAQ;MAEjJA,mCAA8C;MAC1CA,uBACA;MAAAA,yBAAuC;MAC3CA,iBAAS;MAGjBA,+BAAmB;MACfA,iDACJ;MAAAA,iBAAM;;;MA/BQA,gBAAgB;MAAhBA,qCAAgB;MAKiDA,eAA4E;MAA5EA,oGAA4E;MAI3EA,eAA8E;MAA9EA,sGAA8E;MAI7EA,eAA8E;MAA9EA,sGAA8E;MAIlEA,eAAsF;MAAtFA,8GAAsF","names":["i0","AddTravellerComponent","constructor","travellerService","router","route","id","name","email","phone","destinations","ngOnInit","paramMap","subscribe","next","params","get","isEditMode","getTraveller","traveller","travellerResponse","error","response","console","log","addTraveller","addTravellerRequest","push","addDestinationRequest","createTraveller","navigate","updateTraveller","cancelTraveller","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Venancio.Gomani\\Desktop\\upSkill\\ng_dotnet_microservice\\client\\src\\app\\components\\travellers\\add-traveller\\add-traveller.component.html","C:\\Users\\Venancio.Gomani\\Desktop\\upSkill\\ng_dotnet_microservice\\client\\src\\app\\components\\travellers\\add-traveller\\add-traveller.component.ts"],"sourcesContent":["<div class=\"container my-5\">\n    <div class=\"row\">\n        <h1 class=\"mb-3 pb-3 border-bottom\">\n            Add Traveller \n            <button (click)=\"cancelTraveller()\" class=\"btn btn-danger py-2\">\n                Cancel \n                <i class=\"bi bi-x-circle-fill\"></i>\n            </button>\n        </h1>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <form #form=\"ngForm\" (ngSubmit)=\"isEditMode ? updateTraveller() : addTraveller()\">\n                <div *ngIf=\"isEditMode\">\n                    <input type=\"hidden\" name=\"id\" [(ngModel)]=\"travellerResponse.id\">\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"InputName\" class=\"form-label\">Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"InputName\" name=\"name\" [(ngModel)]=\"isEditMode ? travellerResponse.name : addTravellerRequest.name\">\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"InputEmail\" class=\"form-label\">Email address</label>\n                  <input type=\"email\" class=\"form-control\" id=\"InputEmail\" name=\"email\" [(ngModel)]=\"isEditMode ? travellerResponse.email : addTravellerRequest.email\">\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"InputPhone\" class=\"form-label\">Phone</label>\n                    <input type=\"text\" class=\"form-control\" id=\"InputPhone\" name=\"phone\" [(ngModel)]=\"isEditMode ? travellerResponse.phone : addTravellerRequest.phone\">\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"InputDestinations\" class=\"form-label\">Destinations</label>\n                  <input type=\"text\" class=\"form-control\" id=\"InputDestinations\" name=\"destinations\" [(ngModel)]=\"isEditMode ? travellerResponse.destinations : addDestinationRequest.name\">\n                </div>\n                <div class=\"mb-3 form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"checkbox\">\n                  <label class=\"form-check-label\" for=\"checkbox\">I agree to always be awesome for <a href=\"https://venanciogomani.net\">lord Venancio</a>.</label>\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\">\n                    Save \n                    <i class=\"bi bi-check-circle-fill\"></i>\n                </button>\n              </form>\n        </div>\n        <div class=\"col-6\">\n            Picture Of Something Cool Here\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddTraveller } from 'src/app/models/addTraveller.model';\nimport { Destination } from 'src/app/models/destination.model';\nimport { Traveller } from 'src/app/models/traveller.model';\nimport { TravellersService } from 'src/app/services/travellers.service';\n\n@Component({\n  selector: 'app-add-traveller',\n  templateUrl: './add-traveller.component.html',\n  styleUrls: ['./add-traveller.component.css']\n})\nexport class AddTravellerComponent {\n\n  isEditMode: boolean = false;\n\n  addDestinationRequest: Destination = {\n    id: 0,\n    name: ''\n  }\n\n  addTravellerRequest: AddTraveller = {\n    name: '',\n    email: '',\n    phone: 0,\n    destinations: []\n  }\n\n  travellerResponse: Traveller = {\n    id: '',\n    name: '',\n    email: '',\n    phone: 0,\n    destinations: []\n  }\n\n\n  constructor(\n    private travellerService: TravellersService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n\n        if (id) {\n          this.isEditMode = true;\n\n          this.travellerService.getTraveller(id)\n          .subscribe({\n            next: (traveller) => {\n              this.travellerResponse = traveller;\n            },\n            error: (response) => {\n              console.log(response);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Create a Traveller\n   */\n  addTraveller() {\n    this.addTravellerRequest.destinations.push(this.addDestinationRequest);\n    this.travellerService.createTraveller(this.addTravellerRequest)\n    .subscribe({\n      next: (traveller) => {\n        this.router.navigate(['travellers']);\n      },\n      error: (response) => {\n        console.log(response);\n      }\n    });\n  }\n\n  updateTraveller() {\n    console.log(this.travellerResponse);\n    this.travellerService.updateTraveller(this.travellerResponse.id, this.travellerResponse)\n    .subscribe({\n      next: (traveller) => {\n        console.log(traveller);\n        //this.router.navigate(['travellers']);\n      },\n      error: (response) => {\n        console.log(response);\n      }\n    });\n  }\n\n  /**\n   * Cancel operation, empty fields, and go back to home\n   */\n  cancelTraveller() {\n    this.router.navigate([\"travellers\"]);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}